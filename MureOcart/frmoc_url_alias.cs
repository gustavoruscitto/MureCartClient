/*
* ++++++++++++++++++++++++++++++++++++++++++++++++++
* This code is generated by a tool and is provided "as is", without warranty of any kind,
* express or implied, including but not limited to the warranties of merchantability,
* fitness for a particular purpose and non-infringement.
* In no event shall the authors or copyright holders be liable for any claim, damages or
* other liability, whether in an action of contract, tort or otherwise, arising from,
* out of or in connection with the software or the use or other dealings in the software.
* ++++++++++++++++++++++++++++++++++++++++++++++++++
* */

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using MySql.Data.MySqlClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity;

namespace MureOcart
{
	public partial class frmoc_url_alias : Form
	{
		private Model1Entities ctx;
		
		public frmoc_url_alias()
		{
			InitializeComponent();
		}
		
		private void frmoc_url_alias_Load(object sender, EventArgs e)
		{
			ctx = new Model1Entities();
			ctx.oc_url_alias.Load();
			BindingList<oc_url_alias> _entities = ctx.oc_url_alias.Local.ToBindingList();
			oc_url_aliasBindingSource.DataSource = _entities;
			this.url_alias_idTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.oc_url_aliasBindingSource, "url_alias_id", true ));
			this.queryTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.oc_url_aliasBindingSource, "query", true ));
			this.keywordTextBox.DataBindings.Add(new System.Windows.Forms.Binding("Text", this.oc_url_aliasBindingSource, "keyword", true ));
			
		}
		
		private void Save_Click(object sender, EventArgs e)
		{
			if (!this.Validate()) return;
			oc_url_aliasBindingSource.EndEdit();
			ctx.SaveChanges();
			
		}
		
		private void frmoc_url_alias_FormClosing(object sender, FormClosingEventArgs e)
		{
			e.Cancel = false;
		}
		
		private void url_alias_idTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( url_alias_idTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( url_alias_idTextBox, "The field url_alias_id is required" ); 
			}
			int v;
			string s = url_alias_idTextBox.Text;
			if( !int.TryParse( s, out v ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( url_alias_idTextBox, "The field url_alias_id must be int." );
			}
			if( !e.Cancel ) { errorProvider1.SetError( url_alias_idTextBox, "" ); } 
		}
		
		private void queryTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( queryTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( queryTextBox, "The field query is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( queryTextBox, "" ); } 
		}
		
		private void keywordTextBox_Validating(object sender, CancelEventArgs e)
		{
			e.Cancel = false;
			if( string.IsNullOrEmpty( keywordTextBox.Text ) )
			{
				e.Cancel = true;
				errorProvider1.SetError( keywordTextBox, "The field keyword is required" ); 
			}
			if( !e.Cancel ) { errorProvider1.SetError( keywordTextBox, "" ); } 
		}
		
		
		
		
		private void bindingNavigatorAddNewItem_Click(object sender, EventArgs e)
		{
			oc_url_aliasBindingSource.AddNew();
		}
	}
}
